.gridOne{
    display: grid;
    grid-template-columns: 33% 33% 33%; /* queremos dos columnas del 50% o 33%(para 3)cada una*/
    grid-template-rows: auto 100px; /*defino el alto de una fila*/
    gap: 1em; /*Para tener un espaciado entre filas y colunnas*/
    column-gap: 1em ;/*solo para las columnas el espaciado*/
    row-gap: 1em; /*solo para las filas el espaciado*/
    padding: 1em;
}

.gridTwo{
    display: grid;
    grid-template-columns: repeat(4,1fr);/*manera mas eficiente*/
    gap: 1em;
    padding: 1em;
    grid-template-rows: minmax(100px,auto);/*como minimo tiene una altura de 100px cada fila*/
}

.gridTree{
    display: grid;
    grid-template-columns: repeat(3,1fr);/*manera mas eficiente*/
    gap: 1em;
    grid-auto-rows: minmax(100px, auto);/*como minimo tiene una altura de 100px cada fila*/

    /*justify-items: start;organiza los elementos en su espaciado (center, end,stretch) Manera HORIZONTAL*/
    /*align-items: center;/*organiza los elementos en su espaciado (center, end,stretch) Manera VERTICAL*/
}

.gridOne >div,.gridTwo >div{ /* solo los div dentro de la calse grid van a tener estos efectos*/
    background: #ecf0f1;
    padding: 1em;
}

.gridTree > div{
    background: #ecf0f1;
    padding: 1em;
}

.gridOne >div:hover, .gridTwo >div:hover{
    border: 1px solid#f1c40f;
}

.gridTree >div:hover{
    border: 1px solid#f1c40f;
}

.nestedGrid{
    display: grid;
    grid-template-columns: repeat(3,1fr);
    grid-auto-rows: 100px;/*agrega 100px a cada elemento*/
    gap: 1em;
}

.nestedGrid > div{
    border: solid 1px black;
    background: #f1c40f;
    padding: 1em;
}
.elemento1 { 
    grid-column: 1/4;
    grid-row: 1/3;
}

.elemento2 {
    grid-column: 1/2;
}

.elemento3 {
    grid-column: 2/4;
}